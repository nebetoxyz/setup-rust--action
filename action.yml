name: "Setup Rust"
description: "Setup Rust, including rustc and cargo"
author: "Nebeto"

branding:
  icon: "package"
  color: "black"

inputs:
  cache:
    description: "Used to specify a package manager for caching in the default directory. Supported values: cargo."
    required: false
  components:
    description: "Used to specify components to install. Supported values: rustfmt, rust-docs, rust-analyzer, clippy, miri, rust-mingw, llvm-tools."
    required: false

runs:
  using: "composite"
  steps:
    - id: "setup-cache-installer"
      name: "Setup cache for installer"
      uses: actions/cache@v4.2.3
      with:
        path: installer.sh
        key: ${{ runner.os }}-rust-installer
    - id: "download-installer"
      if: ${{ steps.restore-installer-from-cache.outputs.cache-hit != 'true' }}
      name: "Download installer"
      shell: bash
      run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > installer.sh
    - id: "execute-installer"
      name: "Execute installer"
      shell: bash
      run: |
        chmod u+x installer.sh
        ./installer.sh -y --profile minimal
    - id: "setup-cache"
      if: ${{ inputs.cache == 'cargo' && hashFiles('**/Cargo.lock') != '' }}
      name: "Setup cache for Cargo"
      uses: actions/cache@v4.2.3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - id: "setup-components"
      if: ${{ inputs.components != '' }}
      name: "Setup components"
      shell: bash
      run: |
        components=${{ inputs.components }}
        components=${components//,/ }

        for component in "${components[@]}"; do
          rustup component add "$component"
        done
    - id: "setup-environment"
      name: "Setup environment"
      shell: bash
      run: |
        . "$HOME/.cargo/env"
        echo "PATH="$PATH"" >> "$GITHUB_ENV"
    - id: "debug-installation"
      name: "Debug installation"
      shell: bash
      run: |
        rustc --version
        cargo --version
